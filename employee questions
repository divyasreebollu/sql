11. Find the employees who have joined in the last 6 months

SELECT employee_name, hire_date
FROM employees
WHERE hire_date >= CURDATE() - INTERVAL 6 MONTH;

Explanation:

This query uses CURDATE() to get the current date and subtracts 6 months to find employees who joined within that time period.
Output:
employee_name	hire_date
John Doe	2024-08-15
Jane Smith	2024-11-01





12. Find all employees whose salary is higher than the average salary of the department

SELECT employee_name, salary, department
FROM employees e
WHERE salary > (SELECT AVG(salary) FROM employees WHERE department = e.department);

Explanation:

The subquery calculates the average salary for each department, and the outer query returns employees who earn more than that average.
Output:
employee_name	salary	department
Alice Brown	75000	IT
Bob White	85000	IT





13. Find all employees whose names contain a specific substring (e.g., "John")

SELECT employee_name
FROM employees
WHERE employee_name LIKE '%John%';

Explanation:

The LIKE operator is used with the % wildcard to find employees whose names contain the substring 'John'.
Output:
employee_name
John Doe
Johnny Depp





14. Find the highest paid employee in each department

SELECT department, employee_name, salary
FROM employees e
WHERE salary = (SELECT MAX(salary) FROM employees WHERE department = e.department);

Explanation:
This query uses a correlated subquery to find the highest paid employee in each department.
Output:
department	employee_name	salary
IT	Alice Brown	75000
HR	Sarah Lee	65000





15. Find the total number of employees and total salary of each department

SELECT department, COUNT(*) AS total_employees, SUM(salary) AS total_salary
FROM employees
GROUP BY department;
Explanation:

COUNT(*) returns the total number of employees in each department, and SUM(salary) calculates the total salary for each department.
Output:

department	total_employees	total_salary
IT	5	370000
HR	3	195000





16. Find the employees who have not received any bonuses (assuming a bonuses table exists)

SELECT employee_name
FROM employees
WHERE employee_id NOT IN (SELECT employee_id FROM bonuses);

Explanation:

The NOT IN condition filters out employees who have received bonuses. The subquery selects employees who have received bonuses.
Output:
employee_name
Alice Brown
Sarah Lee






17. Find all employees with the same job title and department (excluding themselves)

SELECT e1.employee_name, e2.employee_name, e1.job_title, e1.department
FROM employees e1, employees e2
WHERE e1.department = e2.department
AND e1.job_title = e2.job_title
AND e1.employee_id <> e2.employee_id;

Explanation:

This query uses a self-join to find employees who share the same job title and department, excluding themselves.
Output:

employee_name	employee_name	job_title	department
John Doe	Johnny Depp	Manager	IT
Sarah Lee	Bob White	Analyst	HR






18. Find employees who earn more than their manager (assuming manager_id exists)

SELECT e1.employee_name
FROM employees e1, employees e2
WHERE e1.manager_id = e2.employee_id
AND e1.salary > e2.salary;

Explanation:

This query performs a self-join between employees and their managers to find employees who earn more than their manager.
Output:

employee_name
Alice Brown
Bob White







19. Find the department with the highest average salary

SELECT department, AVG(salary) AS avg_salary
FROM employees
GROUP BY department
ORDER BY avg_salary DESC
LIMIT 1;

Explanation:

This query groups employees by department and orders the departments by the average salary in descending order. LIMIT 1 ensures that only the department with the highest average salary is returned.
Output:

department	avg_salary
IT	74000








20. Find all employees who have worked for more than 5 years

SELECT employee_name, hire_date
FROM employees
WHERE hire_date <= CURDATE() - INTERVAL 5 YEAR;
Explanation:

The CURDATE() function is used to get the current date, and INTERVAL 5 YEAR is used to filter employees who have been with the company for more than 5 years.
Output:

employee_name	hire_date
John Doe	2018-05-10
Sarah Lee	2016-02-20







21. Find all employees who earn a salary between 40,000 and 70,000

SELECT employee_name, salary
FROM employees
WHERE salary BETWEEN 40000 AND 70000;
Explanation:

The BETWEEN operator is used to filter employees whose salary is in the range between 40,000 and 70,000.
Output:

employee_name	salary
Alice Brown	65000
Sarah Lee	60000







22. Find the number of employees who have the same salary

SELECT salary, COUNT(*) AS number_of_employees
FROM employees
GROUP BY salary
HAVING COUNT(*) > 1;
Explanation:

This query groups employees by their salary and counts how many employees have the same salary. The HAVING clause filters out salaries that occur only once.
Output:

salary	number_of_employees
65000	2
75000	2







23. Find the department with the minimum total salary

SELECT department, SUM(salary) AS total_salary
FROM employees
GROUP BY department
ORDER BY total_salary ASC
LIMIT 1;

Explanation:

This query groups employees by department and orders them by the total salary in ascending order. LIMIT 1 ensures that only the department with the minimum total salary is returned.
Output:

department	total_salary
HR	195000






24. Find the top 3 highest paid employees

SELECT employee_name, salary
FROM employees
ORDER BY salary DESC
LIMIT 3;

Explanation:

This query orders employees by salary in descending order and returns the top 3 highest paid employees.
Output:

employee_name	salary
Alice Brown	75000
Bob White	85000
Sarah Lee	70000





25. Find employees whose name is longer than 5 characters

SELECT employee_name
FROM employees
WHERE LENGTH(employee_name) > 5;
Explanation:

The LENGTH function is used to check the length of the employee's name and filters out employees whose name is longer than 5 characters.
Output:

employee_name
Johnathan Doe
Alice Brown







26. Update an employeeâ€™s salary based on their job title
UPDATE employees
SET salary = salary * 1.10
WHERE job_title = 'Manager';
Explanation:

This query increases the salary of employees with the job title 'Manager' by 10%.
Output:

After execution, salaries of all 'Manager' employees will be updated by 10%.







27. Delete employees who have not worked for more than 5 years

DELETE FROM employees
WHERE hire_date > CURDATE() - INTERVAL 5 YEAR;
Explanation:

This query deletes employees who have worked for less than 5 years (i.e., employees hired after the current date minus 5 years).
Output:

Employees hired in the last 5 years will be removed from the database.







28. Find employees who have the same hire date

SELECT e1.employee_name, e2.employee_name, e1.hire_date
FROM employees e1, employees e2
WHERE e1.hire_date = e2.hire_date
AND e1.employee_id <> e2.employee_id;
Explanation:

This query finds employees who have the same hire date using a self-join.
Output:
employee_name	employee_name	hire_date
John Doe	Johnny Depp	2020-01-01
Sarah Lee	Bob White	2019-03-15






29. Find employees who have worked in multiple departments

SELECT employee_name
FROM employees
GROUP BY employee_name
HAVING COUNT(DISTINCT department) > 1;

Explanation:

This query groups employees by name and filters out those who have worked in more than one department.
Output:

employee_name
John Doe
Alice Brown






30. Find the employees who have the same first name

SELECT employee_name
FROM employees
WHERE employee_name LIKE 'John%';

Explanation:

The LIKE operator is used to match employees whose first name is 'John'.
Output:

employee_name
John Doe
Johnny Depp
